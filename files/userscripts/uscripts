#!/bin/bash

run_function0 (){

if [[ -f "board.txt" ]]; then
	sed -i 's/net.ifnames=0/net.ifnames=0 processor.max_cstate=1 isolcpus=2,3/g' board.txt
fi
}
run_function1 (){

# remove sudo no password
rm -f /p2/etc/sudoers.d/010_${USERNAME}-nopasswd
echo "run_function 1 completed" 
}

run_function2 (){
# Install Linuxcnc dependencies
#apt-get install -y xdg-utils python3-serial python3-yapps librsvg2-dev python3-pil python3-pil.imagetk python3 libboost-python1.74.0 libboost-python1.74.0-py311 libc6 libcairo2 libedit2 libepoxy0 libgcc-s1 libglib2.0-0 libgpiod2 libgtk-3-0 libgtk2.0-0 libmodbus5  libpango-1.0-0 libpangocairo-1.0-0 libpython3.11 libstdc++6 libtirpc3 libtk8.6 libudev1 libusb-1.0-0 libx11-6 libxinerama1 libxmu6 libudev-dev iptables blt mesa-utils python3-tk python3-numpy python3-cairo python3-gi-cairo python3-opengl python3-configobj python3-xlib libgtksourceview-3.0-dev tcl8.6 tk8.6 bwidget tclreadline tclx python3-pyqt5 python3-pyqt5.qsci python3-pyqt5.qtsvg python3-pyqt5.qtopengl python3-opencv python3-dbus python3-espeak python3-dbus.mainloop.pyqt5 python3-pyqt5.qtwebengine python3-pyqt5.qtwebkit espeak-ng pyqt5-dev-tools gstreamer1.0-tools espeak sound-theme-freedesktop python3-poppler-qt5 procps psmisc udev

# Get the Linuxcnc Debs

echo "Installing linuxcnc repository" 
mkdir -p /tmp/linuxcnc/
cd /tmp/linuxcnc/
gpg --homedir /tmp/linuxcnc/ --keyserver hkp://keyserver.ubuntu.com --recv-key 3cb9fd148f374fef
gpg --homedir /tmp/linuxcnc/ --export 'EMC Archive Signing Key' | tee /usr/share/keyrings/linuxcnc.gpg > /dev/null
echo 'deleting temp files'

# Install companion repositories. NOTE: QTPYVCP does not support the raspberry pi.

echo "Install ethercat repository"
mkdir -p /usr/local/share/keyrings/
wget -O- https://build.opensuse.org/projects/science:EtherLab/signing_keys/download?kind=gpg | gpg --dearmor | dd of=/etc/apt/trusted.gpg.d/science_EtherLab.gpg
tee -a /etc/apt/sources.list.d/ighvh.sources > /dev/null <<EOT
Types: deb
Signed-By: /etc/apt/trusted.gpg.d/science_EtherLab.gpg
Suites: ./
URIs: http://download.opensuse.org/repositories/science:/EtherLab/Debian_12/
EOT

echo 'Updating apt repository list'
echo deb [arch=amd64,arm64 signed-by=/usr/share/keyrings/linuxcnc.gpg] https://www.linuxcnc.org/ bookworm base 2.9-uspace | tee /etc/apt/sources.list.d/linuxcnc.list > /dev/null
echo deb-src [arch=amd64,arm64 signed-by=/usr/share/keyrings/linuxcnc.gpg] https://www.linuxcnc.org/ bookworm base 2.9-uspace | tee -a /etc/apt/sources.list.d/linuxcnc.list > /dev/null

tee -a /etc/apt/preferences.d/99linuxcnc-uspace.pref > /dev/null <<EOT
package: linuxcnc-uspace
pin: release o=https://www.linuxcnc.org/ bookworm base 2.9-uspace 
Pin-Priority: 500

package: linuxcnc-uspace-dev
pin: release o=https://www.linuxcnc.org/ bookworm base 2.9-uspace 
Pin-Priority: 500

package: linuxcnc-uspace-doc-en
pin: release o=https://www.linuxcnc.org/ bookworm base 2.9-uspace
Pin-Priority: 500

package: linuxcnc-uspace-doc-de
pin: release o=https://www.linuxcnc.org/ bookworm base 2.9-uspace
Pin-Priority: 500

package: linuxcnc-uspace-doc-es
pin: release o=https://www.linuxcnc.org/ bookworm base 2.9-uspace
Pin-Priority: 500

package: linuxcnc-uspace-doc-fr
pin: release o=https://www.linuxcnc.org/ bookworm base 2.9-uspace 2.9-rt
Pin-Priority: 500

package: linuxcnc-uspace-doc-zh-cn
pin: release o=https://www.linuxcnc.org/ bookworm base 2.9-uspace 2.9-rt
Pin-Priority: 500
EOT


echo 'Updating APT index'
apt-get update
echo 'Installing LinuxCNC'
apt-get install -y linuxcnc-uspace linuxcnc-uspace-dev mesaflash

echo 'Installing Flexi dependencies'
apt-get install -y git pigpio-tools stm32flash qtbase5-dev qt5-qmake libmodbus-dev python3-gst-1.0

echo 'Building vfdmod'
cd /tmp
git clone https://github.com/mikemacwillie/vfdmod.git
mkdir vfdmod/build
cd vfdmod/build
qmake ../vfdmod.pro
make
cp vfdmod /usr/bin

echo 'Cloning the remora-flexi hal repo and building flexi component'
cd /home/pi
git clone https://github.com/Expatria-Technologies/remora-flexi-hal.git remora-flexi-hal
cd remora-flexi-hal/LinuxCNC/Components/Flexi/
halcompile --install flexi.c
mkdir /home/pi/linuxcnc
mkdir /home/pi/linuxcnc/configs
mkdir /home/pi/linuxcnc/nc_files
cp -av /home/pi/remora-flexi-hal/LinuxCNC/ConfigSamples/flexi-hal /home/pi/linuxcnc/configs
if [ $BOARD == "bcm2712" ]; then
   echo "Using Pi 5 scripts"
   cp -av /home/pi/remora-flexi-hal/Tools/Pi\ Scripts/Pi5/* /home/pi
elif [ $BOARD == "bcm2711" ]; then
   echo "Using Pi 4 scripts"
   cp -av /home/pi/remora-flexi-hal/Tools/Pi\ Scripts/Pi4/* /home/pi
   echo "Reconfiguring vfdmod serial port for Pi 4"
   sed -i 's/AMA2/AMA3/' /home/pi/linuxcnc/configs/flexi-hal/vfdmod.ini
fi


echo 'Cloning the Remora repo and building remora-eth component for use with uFlexiNet'
cd /tmp
git clone https://github.com/Expatria-Technologies/Remora.git
cd Remora/LinuxCNC/Components/Remora-eth
halcompile --install remora-eth.c

echo 'Cloning the linuxcnc_configs repo and grabbing the uFlexiNet reference config'
cd /tmp
git clone https://github.com/Expatria-Technologies/linuxcnc_configs.git
cp -av /tmp/linuxcnc_configs/flexi-hal-uFlexiNet-XYZ /home/pi/linuxcnc/configs/uFlexiNet
if [ $BOARD == "bcm2712" ]; then
   echo "Configuring for Pi 5"
   sed -i 's/AMA1/AMA2/' /home/pi/linuxcnc/configs/uFlexiNet/vfdmod.ini
elif [ $BOARD == "bcm2711" ]; then
   echo "Configuring for Pi 4"
   sed -i 's/AMA1/AMA3/' /home/pi/linuxcnc/configs/uFlexiNet/vfdmod.ini
   sed -i 's/AMA2/AMA3/' /home/pi/linuxcnc/configs/uFlexiNet/vfdmod.ini
fi

echo 'Cloning the upstream Remora repo and installing the default remora-spi and remora-eth-3.0 components for non-Expatria boards'
cd /tmp
git clone https://github.com/scottalford75/Remora.git Remora-upstream
cd Remora-upstream/LinuxCNC/Components/Remora-spi
halcompile --install remora-spi.c
cd /tmp/Remora-upstream/LinuxCNC/Components/Remora-eth
halcompile --install remora-eth-3.0.c 

echo 'Copying ngcgui library to config dir'
cp -av /usr/share/linuxcnc/ncfiles/ngcgui_lib /home/pi/linuxcnc/


echo 'Enabling auto-login for pi user'
sed -i 's/\#autologin-user=/autologin-user=pi/' /etc/lightdm/lightdm.conf

echo 'Disabling display power management and sleep by default'
tee /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml <<EOF
<channel name="xfce4-power-manager" version="1.0">
  <property name="xfce4-power-manager" type="empty">
    <property name="power-button-action" type="empty"/>
    <property name="show-tray-icon" type="bool" value="false"/>
    <property name="blank-on-ac" type="int" value="0"/>
    <property name="dpms-on-ac-sleep" type="uint" value="0"/>
    <property name="dpms-on-ac-off" type="uint" value="0"/>
  </property>
</channel>
EOF

echo 'Cleaning up temp files'
cd /tmp
rm -Rf /tmp/vfdmod
rm -Rf /tmp/Remora
rm -Rf /tmp/Remora-upstream
rm -Rf /tmp/linuxcnc_configs
rm -rf /tmp/linuxcnc

echo 'Adding README to Desktop'
mkdir /home/pi/Desktop
tee /home/pi/Desktop/README <<EOF
Getting started:

For SPI with a Pi connected directly to the Flexi-HAL: 

A git checkout of the Remora-flexi repository is present in the home directory. Update it before getting started to make sure you have the most recent version. Run 'git pull' from within the /home/pi/remora-flexi-hal directory to update.

Connect 24V power to your Flexi-HAL and a suitable USB-C to your Raspberry Pi. Flash your Flexi with the current build of Remora by running the following command in a terminal:

~/flash_flexi ~/remora-flexi-hal/Firmware/FirmwareBin/FLEXIHAL/firmware.bin

Do not connect anything to the USB-C port on the Flexi-HAL while flashing Remora over the GPIO header. Doing so may prevent the UART bootloader from functioning.

A base PrintNC configuration is provided in the LinuxCNC config directory at /home/pi/linuxcnc/configs/flexi-hal. Edit the INI with your machine configuration prior to attempting motion.
This base configuration includes QtDragon_hd and vfdmod. vfdmod is configured for the Durapulse GS10 VFD, but the configuration can be changed fairly easily to suit a Modbus VFD.




For Ethernet via uFlexinet: 

The remora-eth component is pre-installed in this image. Also included is a reference configuration for use with the uFlexiNet in the LinuxCNC config directory at /home/pi/linuxcnc/configs/uFlexiNet. You will need upload your configuration file to the FlexiHAL using the upload_config.py script that should be in your configuration folder:

python3 upload_config.py FlexiHAL-config.txt

To use the RS485 interface on the FlexiHAL via the uFlexiNet you can set up a virtual serial port and use socat to bridge between userspace Modbus components and Remora. If the RS485 component is included in the board config txt, it will listen on port 27183 for UDP packets and forward them to the RS485 port: 

socat pty, link=/tmp/virtualcom0, raw udp:10.10.10.10:27183 &

More information on the Ethernet implmentation can be found in the README in the repository: https://github.com/Expatria-Technologies/Remora-STM32F4xx-W5500




If you'd like to autostart LinuxCNC on boot after configuring your machine, add 'linuxcnc -l' to 'Application Autostart' in the 'Session and Startup' menu to automatically load the configuration you last selected in the LinuxCNC selection window. 

EOF



# Finished!
echo "Stage 2 done"
}

run_function3 (){
echo "Entering run_function3"	
}

